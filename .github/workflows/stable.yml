on: [push, pull_request]

name: Stable

env:
  RUSTFLAGS: "-D warnings"
  TOOLCHAIN: "stable"

jobs:
  quiche:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.TOOLCHAIN }}
          components: clippy
          override: true

      - name: Install dependencies
        run: sudo apt-get install cmake libev-dev uthash-dev

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose

      - name: Run cargo package
        uses: actions-rs/cargo@v1
        with:
          command: package
          args: --verbose --allow-dirty

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --examples -- -D warnings

      - name: Run cargo doc
        uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --no-deps

      - name: Build C examples
        run: make -C examples

  quiche_x86:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.TOOLCHAIN }}
          target: i686-unknown-linux-gnu
          override: true

      - name: Install dependencies
        run: sudo apt-get install cmake gcc-multilib g++-multilib

      - name: Run cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --verbose --target=i686-unknown-linux-gnu

  apps:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.TOOLCHAIN }}
          override: true

      - name: Install dependencies
        run: sudo apt-get install cmake

      - name: Run cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --verbose --manifest-path=tools/apps/Cargo.toml

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --manifest-path=tools/apps/Cargo.toml -- -D warnings

  qlog:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.TOOLCHAIN }}
          override: true

      - name: Install dependencies
        run: sudo apt-get install cmake

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose --manifest-path=tools/qlog/Cargo.toml

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --manifest-path=tools/qlog/Cargo.toml -- -D warnings

  http3_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.TOOLCHAIN }}
          override: true

      - name: Install dependencies
        run: sudo apt-get install cmake

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --no-run --verbose --manifest-path=tools/http3_test/Cargo.toml

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --manifest-path=tools/http3_test/Cargo.toml -- -D warnings

  nginx:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: [ "1.16.1" ]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.TOOLCHAIN }}
          override: true

      - name: Install dependencies
        run: sudo apt-get install cmake libpcre3-dev zlib1g-dev

      - name: Download NGINX sources
        run: curl -O https://nginx.org/download/nginx-${{ matrix.version }}.tar.gz

      - name: Extract NGINX sources
        run: tar xzf nginx-${{ matrix.version }}.tar.gz

      - name: Build NGINX
        run: |
          cd nginx-${{ matrix.version }} &&
          patch -p01 < ../extras/nginx/nginx-1.16.patch &&
          ./configure --with-http_ssl_module --with-http_v2_module --with-http_v3_module --with-openssl="../deps/boringssl" --with-quiche=".." --with-debug &&
          make -j`nproc` &&
          objs/nginx -V

  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Build Docker images
        run: make docker-build
