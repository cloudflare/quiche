[package]
name = "quiche"
version = "0.23.2"
authors = ["Alessandro Ghedini <alessandro@ghedini.me>"]
description = "ðŸ¥§ Savoury implementation of the QUIC transport protocol and HTTP/3"
build = "src/build.rs"
rust-version = "1.80"
edition = { workspace = true }
repository = { workspace = true }
license = { workspace = true }
readme = { workspace = true }
keywords = { workspace = true }
categories = { workspace = true }
include = [
  "/*.md",
  "/*.toml",
  "/COPYING",
  "/deps/boringssl/**/*.[chS]",
  "/deps/boringssl/**/*.asm",
  "/deps/boringssl/src/**/*.cc",
  "/deps/boringssl/**/CMakeLists.txt",
  "/deps/boringssl/**/sources.cmake",
  "/deps/boringssl/LICENSE",
  "/examples",
  "/include",
  "/quiche.svg",
  "/src",
]

[features]
default = ["boringssl-vendored"]

# Build the vendored BoringSSL library.
boringssl-vendored = []

# Use the BoringSSL library provided by the boring crate.
boringssl-boring-crate = ["boring", "foreign-types-shared"]

# Build quiche against OpenSSL instead of BoringSSL.
openssl = ["pkg-config"]

# Generate pkg-config metadata file for libquiche.
pkg-config-meta = []

# Equivalent to "--cfg fuzzing", but can also be checked in build.rs.
fuzzing = []

# Build and expose the FFI API.
ffi = ["dep:cdylib-link-lines"]

# Exposes internal APIs that have no stability guarantees across versions.
internal = []

[package.metadata.release]
tag-prefix = ""

[package.metadata.docs.rs]
no-default-features = true
features = ["boringssl-boring-crate", "qlog"]
rustdoc-args = ["--cfg", "docsrs"]

[build-dependencies]
cmake = "0.1"
pkg-config = { version = "0.3", optional = true }
cdylib-link-lines = { version = "0.1", optional = true }

[dependencies]
boring = { workspace = true, optional = true }
either = { version = "1.8", default-features = false }
foreign-types-shared = { version = "0.3.0", optional = true }
intrusive-collections = "0.9.5"
libc = { workspace = true }
libm = "0.2"
log = { workspace = true, features = ["std"] }
octets = { workspace = true }
qlog = { workspace = true, optional = true }
sfv = { version = "0.9", optional = true }
slab = "0.4"
smallvec = { workspace = true, features = ["union"] }

[target."cfg(windows)".dependencies]
windows-sys = { version = "0.59", features = [
  "Win32_Networking_WinSock",
  "Win32_Security_Cryptography",
] }

[dev-dependencies]
mio = { workspace = true, features = ["net", "os-poll"] }
ring = { workspace = true }
url = { workspace = true }

[lib]
crate-type = ["lib", "staticlib", "cdylib"]
